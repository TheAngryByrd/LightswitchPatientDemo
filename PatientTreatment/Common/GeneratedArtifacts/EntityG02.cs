

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
    public sealed partial class Treatment : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Treatment entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Treatment()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Treatment(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Treatment> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Treatment.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Treatment_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Treatment_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.Treatment.DetailsClass.GetValue(this, global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.Treatment.DetailsClass.SetValue(this, global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DateTreated
        {
            get
            {
                return global::LightSwitchApplication.Treatment.DetailsClass.GetValue(this, global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.DateTreated);
            }
            set
            {
                global::LightSwitchApplication.Treatment.DetailsClass.SetValue(this, global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.DateTreated, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTreated_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTreated_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateTreated_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string MedicineUsed
        {
            get
            {
                return global::LightSwitchApplication.Treatment.DetailsClass.GetValue(this, global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.MedicineUsed);
            }
            set
            {
                global::LightSwitchApplication.Treatment.DetailsClass.SetValue(this, global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.MedicineUsed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MedicineUsed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MedicineUsed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MedicineUsed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Patient Patient
        {
            get
            {
                return global::LightSwitchApplication.Treatment.DetailsClass.GetValue(this, global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Patient);
            }
            set
            {
                global::LightSwitchApplication.Treatment.DetailsClass.SetValue(this, global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Patient, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patient_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patient_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Patient_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Treatment,
                global::LightSwitchApplication.Treatment.DetailsClass,
                global::LightSwitchApplication.Treatment.DetailsClass.IImplementation,
                global::LightSwitchApplication.Treatment.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass>.Entry
                __TreatmentEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass>.Entry(
                    global::LightSwitchApplication.Treatment.DetailsClass.__Treatment_CreateNew,
                    global::LightSwitchApplication.Treatment.DetailsClass.__Treatment_Created,
                    global::LightSwitchApplication.Treatment.DetailsClass.__Treatment_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Treatment __Treatment_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Treatment> es)
            {
                return new global::LightSwitchApplication.Treatment(es);
            }
            private static void __Treatment_Created(global::LightSwitchApplication.Treatment e)
            {
                e.Treatment_Created();
            }
            private static bool __Treatment_AllowSaveWithErrors(global::LightSwitchApplication.Treatment e)
            {
                bool result = false;
                e.Treatment_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Treatment.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::System.DateTime> DateTreated
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.DateTreated) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, string> MedicineUsed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.MedicineUsed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::LightSwitchApplication.Patient> Patient
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Patient) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::LightSwitchApplication.Patient>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new global::System.DateTime DateTreated { get; set; }
                new string MedicineUsed { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Patient { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "10.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Treatment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, int>.Data> c, global::LightSwitchApplication.Treatment.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.Treatment e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.Treatment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.Treatment e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::System.DateTime>.Entry
                    DateTreated = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::System.DateTime>.Entry(
                        "DateTreated",
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._DateTreated_Stub,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._DateTreated_ComputeIsReadOnly,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._DateTreated_Validate,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._DateTreated_GetImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._DateTreated_SetImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._DateTreated_OnValueChanged);
                private static void _DateTreated_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Treatment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.Treatment.DetailsClass d, object sf)
                {
                    c(d, ref d._DateTreated, sf);
                }
                private static bool _DateTreated_ComputeIsReadOnly(global::LightSwitchApplication.Treatment e)
                {
                    bool result = false;
                    e.DateTreated_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateTreated_Validate(global::LightSwitchApplication.Treatment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateTreated_Validate(r);
                }
                private static global::System.DateTime _DateTreated_GetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d)
                {
                    return d.ImplementationEntity.DateTreated;
                }
                private static void _DateTreated_SetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DateTreated = global::LightSwitchApplication.Treatment.DetailsClass.TruncateDate(v);
                }
                private static void _DateTreated_OnValueChanged(global::LightSwitchApplication.Treatment e)
                {
                    e.DateTreated_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, string>.Entry
                    MedicineUsed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, string>.Entry(
                        "MedicineUsed",
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._MedicineUsed_Stub,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._MedicineUsed_ComputeIsReadOnly,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._MedicineUsed_Validate,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._MedicineUsed_GetImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._MedicineUsed_SetImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._MedicineUsed_OnValueChanged);
                private static void _MedicineUsed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Treatment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, string>.Data> c, global::LightSwitchApplication.Treatment.DetailsClass d, object sf)
                {
                    c(d, ref d._MedicineUsed, sf);
                }
                private static bool _MedicineUsed_ComputeIsReadOnly(global::LightSwitchApplication.Treatment e)
                {
                    bool result = false;
                    e.MedicineUsed_IsReadOnly(ref result);
                    return result;
                }
                private static void _MedicineUsed_Validate(global::LightSwitchApplication.Treatment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.MedicineUsed_Validate(r);
                }
                private static string _MedicineUsed_GetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d)
                {
                    return d.ImplementationEntity.MedicineUsed;
                }
                private static void _MedicineUsed_SetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d, string v)
                {
                    d.ImplementationEntity.MedicineUsed = v;
                }
                private static void _MedicineUsed_OnValueChanged(global::LightSwitchApplication.Treatment e)
                {
                    e.MedicineUsed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::LightSwitchApplication.Patient>.Entry
                    Patient = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::LightSwitchApplication.Patient>.Entry(
                        "Patient",
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Patient_Stub,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Patient_ComputeIsReadOnly,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Patient_Validate,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Patient_GetCoreImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Patient_GetImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Patient_SetImplementationValue,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Patient_Refresh,
                        global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties._Patient_OnValueChanged);
                private static void _Patient_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Treatment.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::LightSwitchApplication.Patient>.Data> c, global::LightSwitchApplication.Treatment.DetailsClass d, object sf)
                {
                    c(d, ref d._Patient, sf);
                }
                private static bool _Patient_ComputeIsReadOnly(global::LightSwitchApplication.Treatment e)
                {
                    bool result = false;
                    e.Patient_IsReadOnly(ref result);
                    return result;
                }
                private static void _Patient_Validate(global::LightSwitchApplication.Treatment e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Patient_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Patient_GetCoreImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d)
                {
                    return d.ImplementationEntity.Patient;
                }
                private static global::LightSwitchApplication.Patient _Patient_GetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Patient, global::LightSwitchApplication.Patient.DetailsClass>(global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Patient, ref d._Patient);
                }
                private static void _Patient_SetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass d, global::LightSwitchApplication.Patient v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Patient, ref d._Patient, (i, ev) => i.Patient = ev, v);
                }
                private static void _Patient_Refresh(global::LightSwitchApplication.Treatment.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Treatment.DetailsClass.PropertySetProperties.Patient, ref d._Patient);
                }
                private static void _Patient_OnValueChanged(global::LightSwitchApplication.Treatment e)
                {
                    e.Patient_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::System.DateTime>.Data _DateTreated;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, string>.Data _MedicineUsed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Treatment, global::LightSwitchApplication.Treatment.DetailsClass, global::LightSwitchApplication.Patient>.Data _Patient;
            
        }
    
        #endregion
    }
    
    #endregion
}
