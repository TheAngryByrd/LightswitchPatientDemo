//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ApplicationData", "SpecificLabs_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Patient), "SpecificLabs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.SpecificLabs), true)]
[assembly: EdmRelationshipAttribute("ApplicationData", "Treatment_Patient", "Patient", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(ApplicationData.Implementation.Patient), "Treatment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ApplicationData.Implementation.Treatment), true)]

#endregion

namespace ApplicationData.Implementation
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ApplicationDataObjectContext : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ApplicationDataObjectContext object using the connection string found in the 'ApplicationDataObjectContext' section of the application configuration file.
        /// </summary>
        public ApplicationDataObjectContext() : base("name=ApplicationDataObjectContext", "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationDataObjectContext object.
        /// </summary>
        public ApplicationDataObjectContext(string connectionString) : base(connectionString, "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ApplicationDataObjectContext object.
        /// </summary>
        public ApplicationDataObjectContext(EntityConnection connection) : base(connection, "ApplicationDataObjectContext")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Patient> Patients
        {
            get
            {
                if ((_Patients == null))
                {
                    _Patients = base.CreateObjectSet<Patient>("Patients");
                }
                return _Patients;
            }
        }
        private ObjectSet<Patient> _Patients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Treatment> Treatments
        {
            get
            {
                if ((_Treatments == null))
                {
                    _Treatments = base.CreateObjectSet<Treatment>("Treatments");
                }
                return _Treatments;
            }
        }
        private ObjectSet<Treatment> _Treatments;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SpecificLabs> SpecificLabsSet
        {
            get
            {
                if ((_SpecificLabsSet == null))
                {
                    _SpecificLabsSet = base.CreateObjectSet<SpecificLabs>("SpecificLabsSet");
                }
                return _SpecificLabsSet;
            }
        }
        private ObjectSet<SpecificLabs> _SpecificLabsSet;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Patients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPatients(Patient patient)
        {
            base.AddObject("Patients", patient);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Treatments EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTreatments(Treatment treatment)
        {
            base.AddObject("Treatments", treatment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SpecificLabsSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSpecificLabsSet(SpecificLabs specificLabs)
        {
            base.AddObject("SpecificLabsSet", specificLabs);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ApplicationData", Name="Patient")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Patient : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Patient object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Patient CreatePatient(global::System.Int32 id, global::System.String firstName, global::System.String lastName)
        {
            Patient patient = new Patient();
            patient.Id = id;
            patient.FirstName = firstName;
            patient.LastName = lastName;
            return patient;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApplicationData", "SpecificLabs_Patient", "SpecificLabs")]
        public EntityCollection<SpecificLabs> SpecificLabsCollection
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SpecificLabs>("ApplicationData.SpecificLabs_Patient", "SpecificLabs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SpecificLabs>("ApplicationData.SpecificLabs_Patient", "SpecificLabs", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApplicationData", "Treatment_Patient", "Treatment")]
        public EntityCollection<Treatment> Treatments
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Treatment>("ApplicationData.Treatment_Patient", "Treatment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Treatment>("ApplicationData.Treatment_Patient", "Treatment", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ApplicationData", Name="SpecificLabs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SpecificLabs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SpecificLabs object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateLabIssued">Initial value of the DateLabIssued property.</param>
        /// <param name="viralLoad">Initial value of the ViralLoad property.</param>
        /// <param name="whiteBloodCellCount">Initial value of the WhiteBloodCellCount property.</param>
        /// <param name="numberOfFingers">Initial value of the NumberOfFingers property.</param>
        /// <param name="specificLabs_Patient">Initial value of the SpecificLabs_Patient property.</param>
        public static SpecificLabs CreateSpecificLabs(global::System.Int32 id, global::System.DateTime dateLabIssued, global::System.Double viralLoad, global::System.Decimal whiteBloodCellCount, global::System.Int32 numberOfFingers, global::System.Int32 specificLabs_Patient)
        {
            SpecificLabs specificLabs = new SpecificLabs();
            specificLabs.Id = id;
            specificLabs.DateLabIssued = dateLabIssued;
            specificLabs.ViralLoad = viralLoad;
            specificLabs.WhiteBloodCellCount = whiteBloodCellCount;
            specificLabs.NumberOfFingers = numberOfFingers;
            specificLabs.SpecificLabs_Patient = specificLabs_Patient;
            return specificLabs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateLabIssued
        {
            get
            {
                return _DateLabIssued;
            }
            set
            {
                OnDateLabIssuedChanging(value);
                ReportPropertyChanging("DateLabIssued");
                _DateLabIssued = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateLabIssued");
                OnDateLabIssuedChanged();
            }
        }
        private global::System.DateTime _DateLabIssued;
        partial void OnDateLabIssuedChanging(global::System.DateTime value);
        partial void OnDateLabIssuedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double ViralLoad
        {
            get
            {
                return _ViralLoad;
            }
            set
            {
                OnViralLoadChanging(value);
                ReportPropertyChanging("ViralLoad");
                _ViralLoad = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViralLoad");
                OnViralLoadChanged();
            }
        }
        private global::System.Double _ViralLoad;
        partial void OnViralLoadChanging(global::System.Double value);
        partial void OnViralLoadChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal WhiteBloodCellCount
        {
            get
            {
                return _WhiteBloodCellCount;
            }
            set
            {
                OnWhiteBloodCellCountChanging(value);
                ReportPropertyChanging("WhiteBloodCellCount");
                _WhiteBloodCellCount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("WhiteBloodCellCount");
                OnWhiteBloodCellCountChanged();
            }
        }
        private global::System.Decimal _WhiteBloodCellCount;
        partial void OnWhiteBloodCellCountChanging(global::System.Decimal value);
        partial void OnWhiteBloodCellCountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NumberOfFingers
        {
            get
            {
                return _NumberOfFingers;
            }
            set
            {
                OnNumberOfFingersChanging(value);
                ReportPropertyChanging("NumberOfFingers");
                _NumberOfFingers = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfFingers");
                OnNumberOfFingersChanged();
            }
        }
        private global::System.Int32 _NumberOfFingers;
        partial void OnNumberOfFingersChanging(global::System.Int32 value);
        partial void OnNumberOfFingersChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SpecificLabs_Patient
        {
            get
            {
                return _SpecificLabs_Patient;
            }
            set
            {
                OnSpecificLabs_PatientChanging(value);
                ReportPropertyChanging("SpecificLabs_Patient");
                _SpecificLabs_Patient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecificLabs_Patient");
                OnSpecificLabs_PatientChanged();
            }
        }
        private global::System.Int32 _SpecificLabs_Patient;
        partial void OnSpecificLabs_PatientChanging(global::System.Int32 value);
        partial void OnSpecificLabs_PatientChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApplicationData", "SpecificLabs_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("ApplicationData.SpecificLabs_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("ApplicationData.SpecificLabs_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("ApplicationData.SpecificLabs_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("ApplicationData.SpecificLabs_Patient", "Patient", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ApplicationData", Name="Treatment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Treatment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Treatment object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateTreated">Initial value of the DateTreated property.</param>
        /// <param name="medicineUsed">Initial value of the MedicineUsed property.</param>
        /// <param name="treatment_Patient">Initial value of the Treatment_Patient property.</param>
        public static Treatment CreateTreatment(global::System.Int32 id, global::System.DateTime dateTreated, global::System.String medicineUsed, global::System.Int32 treatment_Patient)
        {
            Treatment treatment = new Treatment();
            treatment.Id = id;
            treatment.DateTreated = dateTreated;
            treatment.MedicineUsed = medicineUsed;
            treatment.Treatment_Patient = treatment_Patient;
            return treatment;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateTreated
        {
            get
            {
                return _DateTreated;
            }
            set
            {
                OnDateTreatedChanging(value);
                ReportPropertyChanging("DateTreated");
                _DateTreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateTreated");
                OnDateTreatedChanged();
            }
        }
        private global::System.DateTime _DateTreated;
        partial void OnDateTreatedChanging(global::System.DateTime value);
        partial void OnDateTreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MedicineUsed
        {
            get
            {
                return _MedicineUsed;
            }
            set
            {
                OnMedicineUsedChanging(value);
                ReportPropertyChanging("MedicineUsed");
                _MedicineUsed = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MedicineUsed");
                OnMedicineUsedChanged();
            }
        }
        private global::System.String _MedicineUsed;
        partial void OnMedicineUsedChanging(global::System.String value);
        partial void OnMedicineUsedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Treatment_Patient
        {
            get
            {
                return _Treatment_Patient;
            }
            set
            {
                OnTreatment_PatientChanging(value);
                ReportPropertyChanging("Treatment_Patient");
                _Treatment_Patient = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Treatment_Patient");
                OnTreatment_PatientChanged();
            }
        }
        private global::System.Int32 _Treatment_Patient;
        partial void OnTreatment_PatientChanging(global::System.Int32 value);
        partial void OnTreatment_PatientChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ApplicationData", "Treatment_Patient", "Patient")]
        public Patient Patient
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("ApplicationData.Treatment_Patient", "Patient").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("ApplicationData.Treatment_Patient", "Patient").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Patient> PatientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Patient>("ApplicationData.Treatment_Patient", "Patient");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Patient>("ApplicationData.Treatment_Patient", "Patient", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
